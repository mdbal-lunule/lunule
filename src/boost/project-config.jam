# Boost.Build Configuration
# Automatically generated by bootstrap.sh

import option ;
import feature ;

# Compiler configuration. This definition will be used unless
# you already have defined some toolsets in your user-config.jam
# file.
if ! gcc in [ feature.values <toolset> ]
{
    using gcc ; 
}

project : default-build <toolset>gcc ;

# Python configuration
import python ;
if ! [ python.configured ]
{
    using python : 2.7 : /usr ;
}

# List of --with-<library> and --without-<library>
# options. If left empty, all libraries will be built.
# Options specified on the command line completely
# override this variable.
libraries =  --with-atomic --with-thread --with-system --with-regex --with-random --with-program_options --with-date_time --with-iostreams --with-filesystem --with-python --with-context --with-coroutine --with-container ;

# These settings are equivivalent to corresponding command-line
# options.
option.set prefix : /home/ceph/ceph-src/scaling-mds-ceph-12.2.5/build/boost ;
option.set exec-prefix : /home/ceph/ceph-src/scaling-mds-ceph-12.2.5/build/boost ;
option.set libdir : /home/ceph/ceph-src/scaling-mds-ceph-12.2.5/build/boost/lib ;
option.set includedir : /home/ceph/ceph-src/scaling-mds-ceph-12.2.5/build/boost/include ;

# Stop on first error
option.set keep-going : false ;
