#!/usr/bin/env python
# vim: ts=4 sw=4 smarttab expandtab

import argparse
import inspect
import os
import sys

# Make life easier on developers

MYPATH = os.path.abspath(__file__)
MYDIR = os.path.dirname(MYPATH)
DEVMODEMSG = '*** DEVELOPER MODE: setting PYTHONPATH and LD_LIBRARY_PATH'

def parse_args():
    parser = argparse.ArgumentParser(description="Ceph REST API webapp")
    parser.add_argument('-c', '--conf', help='Ceph configuration file',
                        default='/etc/ceph/ceph.conf')
    parser.add_argument('--cluster', help='Ceph cluster name')
    parser.add_argument('-n', '--name', help='Ceph client name')
    parser.add_argument('-i', '--id', help='Ceph client id', default='admin')

    return parser.parse_known_args()

# main

parsed_args, rest = parse_args()

# import now that env vars are available to imported module

try:
    import ceph_rest_api
except EnvironmentError as e:
    print >> sys.stderr, "Error importing ceph_rest_api: ", str(e)
    sys.exit(1)

# let other exceptions generate traceback

app = ceph_rest_api.generate_app(
    parsed_args.conf,
    parsed_args.cluster,
    parsed_args.name,
    parsed_args.id,
    rest,
)

files = [os.path.split(fr[1])[-1] for fr in inspect.stack()]
if 'pdb.py' in files:
    app.run(host=app.ceph_addr, port=app.ceph_port,
            debug=True, use_reloader=False, use_debugger=False)
else:
    if __name__ == '__main__':
        app.run(host=app.ceph_addr, port=app.ceph_port)
    else:
        application = app
